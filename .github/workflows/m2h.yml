# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: printenv
        run: printenv
      - name: Markdown-HTML
        # You may pin to the exact commit or the version.
        # uses: ZacJW/markdown-html-action@3865edcff67a98f3984bd6312111f0d4deec57d4
        uses: ZacJW/markdown-html-action@1.1.1
        with:
          # A JSON list of a list of paths to markdown files to render in to HTML files
          input_files: '[["README.md"]]'
          # A JSON list of paths to save the rendered HTML files to
          output_files: '["index.html"]'
          # # (boolean) Whether or not a file should be automatically excluded from being included more than once in a given output file
          # exclude_duplicates: # default is true
          # # An optional path to a CSS file that will be included as a <style> block in every output file
          # builtin_stylesheet: # default is 
          # # A JSON list of extensions to be passed to Python markdown
          # extensions: # default is ["extra"]
          # # A JSON object of extension configurations
          # extension_configs: # default is {}
          # # A space separated list of Python packages to be installed before execution (useful for installing third-party markdown extensions)
          # packages: # default is
      - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        with:
          # # The arguments for the `git add` command (see the paragraph below for more info)
          # # Default: '.'
          # add: 'src'

          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: 'GITHUB ACTION'

          # # The email of the user that will be displayed as the author of the commit.
          # # Default: depends on the default_author input
          # author_email: mail@example.com

          # # Additional arguments for the git commit command. The --message argument is already set by the message input.
          # # Default: ''
          # commit: --signoff

          # # The name of the custom committer you want to use, if different from the author of the commit.
          # # Default: the name of the author (set with either author_name or default_author)
          # committer_name: Committer Name

          # # The email of the custom committer you want to use, if different from the author of the commit.
          # # Default: the email of the author (set with either author_email or default_author)
          # committer_email: mail@example.com

          # # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
          # # Default: '.'
          # cwd: './path/to/the/repo'

          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: user_info

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'Generate html files from readme.'

          # # If this input is set, the action will push the commit to a new branch with this name.
          # # Default: ''
          # new_branch: custom-new-branch

          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: exitImmediately

          # # Arguments for the git pull command. By default, the action does not pull.
          # # Default: ''
          # pull: '--rebase --autostash ...'

          # # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # # Default: true
          # push: false

          # # The arguments for the `git rm` command (see the paragraph below for more info)
          # # Default: ''
          # remove: './dir/old_file.js'

          # # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
          # # Default: ''
          # tag: 'v1.0.0 --force'

          # # Arguments for the git push --tags command (any additional argument will be added after --tags)
          # # Default: ''
          # tag_push: '--force'
